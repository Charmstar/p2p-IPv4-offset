{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{lower-alpha\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{lower-alpha\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \up0 \nosupersub \ulnone Build a CentOS Stream 8 USB flash boot disk for exclusive use with Invalid TCP Checksum protocol:\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf2 \
Keep all encryption related activities isolated from all other activities. Rufus is a Windows program that creates a bootable disk from any iso file. CentOS Stream 8 rufus converts a 10GB installation iso disk to an installation flash disk.\
\pard\tx20\tx392\pardeftab720\li392\fi-393\partightenfactor0
\ls1\ilvl0\cf2 \up0 \nosupersub \ulnone {\listtext	1.	}\up0 \nosupersub \ulnone Download rufus-3.17d.exe and CentOS-Stream-8-x86_64-20211206-dvd1.iso on a Windows pc, in the same directory (Downloads). \
\ls1\ilvl0\up0 \nosupersub \ulnone {\listtext	2.	}\up0 \nosupersub \ulnone Run rufus. Insert a USB flash disk 16GB or more.\
\ls1\ilvl0\up0 \nosupersub \ulnone {\listtext	3.	}\up0 \nosupersub \ulnone Rufus sees the USB flash disk that was inserted. Select OK to Start.\
\ls1\ilvl0\up0 \nosupersub \ulnone {\listtext	4.	}\up0 \nosupersub \ulnone After about 20 minutes, the USB flash disk is ready to boot. Set your computer\'92s BIOS boot order to boot a USB device before the hard disk or DVD.  Secure Boot on newer PCs with TPM 2.0 chip makes this step difficult, 
\f0\b use an older computer.
\f1\b0 \
\ls1\ilvl0\up0 \nosupersub \ulnone {\listtext	5.	}\up0 \nosupersub \ulnone After CentOS Stream 8 is installed on a separate flash disk, remove the installation flash disk and boot the newly created CentOS Stream 8 USB flash disk:\
\pard\tx20\tx392\pardeftab720\li392\fi-393\partightenfactor0
\ls2\ilvl0\cf2 \up0 \nosupersub \ulnone {\listtext	a.	}\up0 \nosupersub \ulnone # yum update (this will take an hour or more)\
\ls2\ilvl0\up0 \nosupersub \ulnone {\listtext	b.	}\up0 \nosupersub \ulnone # python2    (offers to install python 2.7.18)\
\ls2\ilvl0\up0 \nosupersub \ulnone {\listtext	c.	}\up0 \nosupersub \ulnone # yum install epel-release\
\ls2\ilvl0\up0 \nosupersub \ulnone {\listtext	d.	}\up0 \nosupersub \ulnone # yum install python2-pip\
\ls2\ilvl0\up0 \nosupersub \ulnone {\listtext	e.	}\up0 \nosupersub \ulnone # pip2 install scapy   (installs scapy 2.4.5)\
\ls2\ilvl0\up0 \nosupersub \ulnone {\listtext	f.	}\up0 \nosupersub \ulnone # yum install wireshark (also installs tshark for nodes with no GUI)\
\ls2\ilvl0\up0 \nosupersub \ulnone {\listtext	g.	}\up0 \nosupersub \ulnone # dnf \'97enablerepo=powertools install libpcap-devel    (installs pcap.h)\
\pard\pardeftab720\partightenfactor0
\cf2 7.   Install Invalid TCP Checksum protocol:\
\pard\tx20\tx392\pardeftab720\li392\fi-393\partightenfactor0
\ls3\ilvl0\cf2 \up0 \nosupersub \ulnone {\listtext	a.	}\up0 \nosupersub \ulnone put SENDSYNS.cpio in /root/tmp on the above bootable USB flash disk,\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	b.	}\up0 \nosupersub \ulnone cpio -idv < SENDSYNS.cpio  (reports blocks created)\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	c.	}\up0 \nosupersub \ulnone cd SENDSYNS/SENDER, \
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	d.	}\up0 \nosupersub \ulnone # gcc receive1.c -o receive1 -lpcap\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	e.	}\up0 \nosupersub \ulnone cd ../RECEIVER, \
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	f.	}\up0 \nosupersub \ulnone # gcc receiver.c -o receiver -lpcap\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	g.	}\up0 \nosupersub \ulnone # ./receiver dev   (where dev is the IPv4 ethernet device per ifconfig).\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	h.	}\up0 \nosupersub \ulnone When packets stop coming in, Control-C to exit the receiver program.\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	i.	}\up0 \nosupersub \ulnone For larger files that are probably encrypted,\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	j.	}\up0 \nosupersub \ulnone # gpg -d translatedbinaryout | hexdump\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	k.	}\up0 \nosupersub \ulnone for smallish plaintext files that are not encrypted, for example Alook953e,\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	l.	}\up0 \nosupersub \ulnone # hexdump translatedbinaryout\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	m.	}\up0 \nosupersub \ulnone Receiver indicates a negative acknowledgement of the entire file transfer by not sending back anything, otherwise when receiver is satisfied with the received results, receiver sends back (gleaning the source IP from previous packets as destination IP) the received bytes contained in receiver\'92s translatedbinaryout file.\
\ls3\ilvl0\up0 \nosupersub \ulnone {\listtext	n.	}\up0 \nosupersub \ulnone When sender receives receiver\'92s positive acknowledgment sender compares this received file with the sent file. If different, or no response at all, sender keeps re-sending until receiver\'92s positive acknowledgment matches what is sent. See \'93MITM Protection and Bad IP Path Detection.\'94 }